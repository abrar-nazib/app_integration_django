openapi: 3.0.3
info:
  title: EcoSync API
  version: 1.0.0
  description: A Robust Solid Waste Management System
paths:
  /auth/change-password/:
    post:
      operationId: auth_change_password_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/reset-password/confirm/{uidb64}/{token}/:
    post:
      operationId: auth_reset_password_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/reset-password/initiate/:
    post:
      operationId: auth_reset_password_initiate_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /mswm/sites/:
    get:
      operationId: mswm_sites_list
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MSWMSiteCreation'
          description: ''
    post:
      operationId: mswm_sites_create
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSWMSiteCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MSWMSiteCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MSWMSiteCreation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSWMSiteCreation'
          description: ''
  /mswm/sites/{id}/managers/:
    get:
      operationId: mswm_sites_managers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSWMSiteAddManager'
          description: ''
    put:
      operationId: mswm_sites_managers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSWMSiteAddManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MSWMSiteAddManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MSWMSiteAddManager'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSWMSiteAddManager'
          description: ''
    patch:
      operationId: mswm_sites_managers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMSWMSiteAddManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMSWMSiteAddManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMSWMSiteAddManager'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSWMSiteAddManager'
          description: ''
  /mswm/sites/{id}/vehicles/:
    get:
      operationId: mswm_sites_vehicles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSWMSiteAddVehicle'
          description: ''
    put:
      operationId: mswm_sites_vehicles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSWMSiteAddVehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MSWMSiteAddVehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MSWMSiteAddVehicle'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSWMSiteAddVehicle'
          description: ''
    patch:
      operationId: mswm_sites_vehicles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMSWMSiteAddVehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMSWMSiteAddVehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMSWMSiteAddVehicle'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSWMSiteAddVehicle'
          description: ''
  /mswm/sites/managers/:
    get:
      operationId: mswm_sites_managers_list
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUser'
          description: ''
  /mswm/sites/managers/optimized-fleet:
    get:
      operationId: mswm_sites_managers_optimized_fleet_retrieve
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /mswm/sites/vehicles/:
    get:
      operationId: mswm_sites_vehicles_list
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleCreation'
          description: ''
  /mswm/travel-logs/:
    get:
      operationId: mswm_travel_logs_list
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelLogs'
          description: ''
    post:
      operationId: mswm_travel_logs_create
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelLogs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TravelLogs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TravelLogs'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelLogs'
          description: ''
  /mswm/travel-logs/{id}/bill/:
    get:
      operationId: mswm_travel_logs_bill_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /mswm/vehicle-types/:
    get:
      operationId: mswm_vehicle_types_list
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleTypeCreation'
          description: ''
    post:
      operationId: mswm_vehicle_types_create
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTypeCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleTypeCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleTypeCreation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeCreation'
          description: ''
  /mswm/vehicles/:
    get:
      operationId: mswm_vehicles_list
      tags:
      - mswm
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleCreation'
          description: ''
    post:
      operationId: mswm_vehicles_create
      tags:
      - mswm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleCreation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleCreation'
          description: ''
  /profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: profile_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: profile_partial_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /rbac/permissions/:
    get:
      operationId: rbac_permissions_list
      tags:
      - rbac
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
          description: ''
    post:
      operationId: rbac_permissions_create
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /rbac/permissions/{id}/:
    get:
      operationId: rbac_permissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    put:
      operationId: rbac_permissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    patch:
      operationId: rbac_permissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermission'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: rbac_permissions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /rbac/roles/:
    get:
      operationId: rbac_roles_list
      tags:
      - rbac
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
          description: ''
    post:
      operationId: rbac_roles_create
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /rbac/roles/{id}/:
    get:
      operationId: rbac_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: rbac_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: rbac_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: rbac_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /rbac/roles/{id}/permissions/:
    get:
      operationId: rbac_roles_permissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: rbac_roles_permissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: rbac_roles_permissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - rbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUserSerializerAdmin'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserSerializerAdmin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserSerializerAdmin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserSerializerAdmin'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserSerializerAdmin'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /users/{id}/roles/:
    get:
      operationId: users_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleUpdate'
          description: ''
    put:
      operationId: users_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRoleUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRoleUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleUpdate'
          description: ''
    patch:
      operationId: users_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleUpdate'
          description: ''
  /users/roles/:
    get:
      operationId: users_roles_list
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
          description: ''
components:
  schemas:
    CapacityEnum:
      enum:
      - 3
      - 5
      - 10
      - 15
      type: integer
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        name:
          type: string
          nullable: true
          maxLength: 100
        role:
          type: integer
          readOnly: true
          nullable: true
        managed_site:
          type: integer
          readOnly: true
          nullable: true
      required:
      - id
      - managed_site
      - role
      - username
    CustomUserSerializerAdmin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        name:
          type: string
          nullable: true
          maxLength: 100
        role:
          type: integer
          readOnly: true
          nullable: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - id
      - password
      - role
      - username
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    MSWMSiteAddManager:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ward_number:
          type: integer
          readOnly: true
          nullable: true
        site_type:
          allOf:
          - $ref: '#/components/schemas/SiteTypeEnum'
          readOnly: true
        managers:
          type: array
          items:
            type: integer
      required:
      - id
      - managers
      - site_type
      - ward_number
    MSWMSiteAddVehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ward_number:
          type: integer
          readOnly: true
          nullable: true
        site_type:
          allOf:
          - $ref: '#/components/schemas/SiteTypeEnum'
          readOnly: true
        site_vehicles:
          type: array
          items:
            type: integer
      required:
      - id
      - site_type
      - site_vehicles
      - ward_number
    MSWMSiteCreation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ward_number:
          type: integer
          nullable: true
        site_type:
          $ref: '#/components/schemas/SiteTypeEnum'
        capacity:
          type: number
          format: float
          nullable: true
        latitude:
          type: number
          format: float
          nullable: true
        longitude:
          type: number
          format: float
          nullable: true
        managers:
          type: array
          items:
            type: integer
          readOnly: true
        site_vehicles:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - id
      - managers
      - site_vehicles
    NameEnum:
      enum:
      - Open Truck
      - Dump Truck
      - Compactor
      - Container Career
      - Other
      type: string
    NullEnum:
      enum:
      - null
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedCustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        name:
          type: string
          nullable: true
          maxLength: 100
        role:
          type: integer
          readOnly: true
          nullable: true
        managed_site:
          type: integer
          readOnly: true
          nullable: true
    PatchedMSWMSiteAddManager:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ward_number:
          type: integer
          readOnly: true
          nullable: true
        site_type:
          allOf:
          - $ref: '#/components/schemas/SiteTypeEnum'
          readOnly: true
        managers:
          type: array
          items:
            type: integer
    PatchedMSWMSiteAddVehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ward_number:
          type: integer
          readOnly: true
          nullable: true
        site_type:
          allOf:
          - $ref: '#/components/schemas/SiteTypeEnum'
          readOnly: true
        site_vehicles:
          type: array
          items:
            type: integer
    PatchedPermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
    PatchedRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        permissions:
          type: array
          items:
            type: integer
    PatchedUserRoleUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        role:
          type: integer
          nullable: true
    Permission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
      required:
      - id
      - name
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        permissions:
          type: array
          items:
            type: integer
      required:
      - id
      - name
    SiteTypeEnum:
      enum:
      - STS
      - Landfill
      - Other
      type: string
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    TravelLogs:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        site:
          type: integer
        vehicle:
          type: integer
        arrival_time:
          type: string
          format: date-time
          nullable: true
        departure_time:
          type: string
          format: date-time
          nullable: true
        waste_weight:
          type: number
          format: float
          nullable: true
      required:
      - id
      - site
      - vehicle
    UserRoleUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        role:
          type: integer
          nullable: true
      required:
      - id
      - name
    VehicleCreation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vehicle_type:
          type: integer
        registration_number:
          type: string
          maxLength: 100
        sts_site:
          type: integer
          readOnly: true
          nullable: true
      required:
      - id
      - registration_number
      - sts_site
      - vehicle_type
    VehicleTypeCreation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
        capacity:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CapacityEnum'
          - $ref: '#/components/schemas/NullEnum'
        fuel_cost_km_loaded:
          type: number
          format: float
          nullable: true
        fuel_cost_km_empty:
          type: number
          format: float
          nullable: true
      required:
      - id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
